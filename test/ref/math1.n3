     @prefix : <#> .
    
    "0"     a :testValue;
         :worksWith 3.1415926,
                10000000.0e+00,
                0,
                1729 .
    
    "0 + 0 = 0"     a :RESULT .
    
    "0 + 1.0e7 = 10000000.0"     a :RESULT .
    
    "0 + 10000000.0 = 10000000.0"     a :RESULT .
    
    "0 + 1729 = 1729"     a :RESULT .
    
    "0 + 3.1415926 = 3.1415926"     a :RESULT .
    
    "1.0e7"     a :testValue;
         :worksWith 10000000.0e+00 .
    
    "1.0e7 + 0 = 10000000.0"     a :RESULT .
    
    "1.0e7 + 1.0e7 = 20000000.0"     a :RESULT .
    
    "1.0e7 + 10000000.0 = 20000000.0"     a :RESULT .
    
    "1.0e7 + 1729 = 10001729.0"     a :RESULT .
    
    "1.0e7 + 3.1415926 = 10000003.141592599"     a :RESULT .
    
    "10000000.0 + 0 = 10000000.0"     a :RESULT .
    
    "10000000.0 + 1.0e7 = 20000000.0"     a :RESULT .
    
    "10000000.0 + 10000000.0 = 20000000.0"     a :RESULT .
    
    "10000000.0 + 1729 = 10001729.0"     a :RESULT .
    
    "10000000.0 + 3.1415926 = 10000003.141592599"     a :RESULT .
    
    "1729"     a :testValue;
         :worksWith 3.1415926,
                10000000.0e+00,
                0,
                1729 .
    
    "1729 + 0 = 1729"     a :RESULT .
    
    "1729 + 1.0e7 = 10001729.0"     a :RESULT .
    
    "1729 + 10000000.0 = 10001729.0"     a :RESULT .
    
    "1729 + 1729 = 3458"     a :RESULT .
    
    "1729 + 3.1415926 = 1732.1415926"     a :RESULT .
    
    "3.1415926"     a :testValue;
         :worksWith 3.1415926,
                10000000.0e+00 .
    
    "3.1415926 + 0 = 3.1415926"     a :RESULT .
    
    "3.1415926 + 1.0e7 = 10000003.141592599"     a :RESULT .
    
    "3.1415926 + 10000000.0 = 10000003.141592599"     a :RESULT .
    
    "3.1415926 + 1729 = 1732.1415926"     a :RESULT .
    
    "3.1415926 + 3.1415926 = 6.2831852"     a :RESULT .
    
    3.1415926     a :testValue;
         :worksWith 3.1415926,
                10000000.0e+00 .
    
    10000000.0e+00     a :testValue;
         :worksWith 10000000.0e+00 .
    
    3.5e+00     :valueOf "7 / 2" .
    
    9.5e+00     :valueOf "(7 / 2) + ((7 % 2)^10000000) + 5 [should be 9.5]" .
    
    -3     :valueOf "3 negated" .
    
    0     a :testValue;
         :valuOf " () math:sum ?x  --- should be 0";
         :worksWith 3.1415926,
                10000000.0e+00,
                0,
                1729 .
    
    1     :valuOf " () math:product ?x  --- should be 1";
         :valueOf "7 % 2" .
    
    1024     :valueOf "2^10" .
    
    108     :valueOf "3 + 5 + 100" .
    
    1729     a :testValue;
         :worksWith 3.1415926,
                10000000.0e+00,
                0,
                1729 .
    
    3     :valueOf "sum(3) = 3",
                "what -3's the - of" .
    
    30     :valueOf "5 * 3 * 2" .
    
    5     :valueOf "8 - 3" .
    
    8     :valueOf "3 + (8 - 3)",
                "3 + 5",
                "3 + 5 = 8" .
      ( "1.0e7"
        "3.1415926" )
         :SumDifferenceFAILS 3.14159259945e+00 .
      ( "1.0e7"
        3.1415926 )
         :SumDifferenceFAILS 3.14159259945e+00 .
      ( 10000000.0e+00
        "3.1415926" )
         :SumDifferenceFAILS 3.14159259945e+00 .
      ( 10000000.0e+00
        3.1415926 )
         :SumDifferenceFAILS 3.14159259945e+00 .
    
    :test10     a :success .
    
